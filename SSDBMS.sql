CREATE DATABASE DB01; -- create database db01
USE DB01; -- use database db01


-- create scheme SUBJECT
CREATE TABLE SUBJECT(
	SUBJECT_ID CHAR(3) PRIMARY KEY,
	SUBJECT_NAME VARCHAR(50),
	UNITS INT UNSIGNED CHECK (UNITS > 0 )
);  

-- create scheme CLASS
CREATE TABLE CLASS(
	CLASS_ID CHAR(3) PRIMARY KEY,
	CLASS_NAME VARCHAR(50),
	CLASS_YEAR INT UNSIGNED CHECK (CLASS_YEAR > 0) 
); 

-- create scheme STUDENT
CREATE TABLE STUDENT(
	STUDENT_ID CHAR(3) PRIMARY KEY,
	STUDENT_NAME VARCHAR(50),
	STUDENT_ADDRESS VARCHAR(150),
	CLASS_ID CHAR(3),
	FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID)
); 

-- create scheme SUDENT_GRADES
CREATE TABLE STUDENT_GRADES(
	STUDENT_ID CHAR(3), 
	SUBJECT_ID CHAR(3),
	PRIMARY KEY (STUDENT_ID, SUBJECT_ID),
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID), 
	FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(SUBJECT_ID), 
	GRADES REAL CHECK (GRADES >= 0 AND GRADES <= 10)
); 

-- insert data subject_id: "s01" -> "s05"
INSERT INTO SUBJECT VALUES ("S01", "STATISTICS", 2); 
INSERT INTO SUBJECT VALUES ("S02", "PROABILITY", 2);
INSERT INTO SUBJECT VALUES ("S03", "COMPUTER SCIENCE", 4);
INSERT INTO SUBJECT VALUES ("S04", "PYTHON LANGUAGE", 4);    
INSERT INTO SUBJECT VALUES ("S05", "OPP", 3);  


SELECT * FROM SUBJECT; 

-- insert data class_id: "c01" -> "c03"
INSERT INTO CLASS VALUES ("C01", "DATA_SCIENCE", 2023); 
INSERT INTO CLASS VALUES ("C02", "COMPUTER SCIENCE", 2023);
INSERT INTO CLASS VALUES ("C03", "ARTIFICIAL INTELLEGENCE", 2024); 

SELECT * FROM CLASS ; 

-- insert data student_id: "t01" -> "t20"
INSERT INTO STUDENT VALUES ("T01", "NHU PHAM QUANG MANH", "157/58, NGUYEN GIA TRI, BINH THANH", "C01");
INSERT INTO STUDENT VALUES ("T02", "VO KIM AN", "757/44 LY AN, QUAN 6", "C02");
INSERT INTO STUDENT VALUES ("T03", "LY VAN DUNG", "362/85 DANG AN, PHU NHUAN", "C01");
INSERT INTO STUDENT VALUES ("T04", "TRAN TRONG BINH", "472/99 VU BINH, QUAN 6", "C03");
INSERT INTO STUDENT VALUES ("T05", "BUI QUANG HUONG", "323/64 NGUYEN HA, GO VAP", "C01");
INSERT INTO STUDENT VALUES ("T06", "DUONG QUANG HUONG", "446/45 VU HA, QUAN 10", "C02");
INSERT INTO STUDENT VALUES ("T07", "HUYNH XUAN LAN", "18/26 DUONG LAN, QUAN 4", "C03");
INSERT INTO STUDENT VALUES ("T08", "HOANG HOANG LINH", "915/21 NGO NAM, BINH THANH", "C01");
INSERT INTO STUDENT VALUES ("T09", "DANG MINH TUAN", "64/46 TRAN LINH, QUAN 8", "C02");
INSERT INTO STUDENT VALUES ("T10", "LY KIM HUONG", "337/9 PHAM LAN, TAN BINH", "C03");
INSERT INTO STUDENT VALUES ("T11", "HUYNH TRONG NAM", "210/60 BUI DUNG, BINH CHANH", "C01");
INSERT INTO STUDENT VALUES ("T12", "VO MINH TUAN", "793/92 DO TUAN, HOC MON", "C02");
INSERT INTO STUDENT VALUES ("T13", "HOANG HOANG TUAN", "130/97 NGO HA, QUAN 7", "C03");
INSERT INTO STUDENT VALUES ("T14", "LY MINH DUNG", "444/28 PHAM BINH, QUAN 11", "C01");
INSERT INTO STUDENT VALUES ("T15", "DO QUANG BINH", "93/33 BUI AN, QUAN 12", "C02");
INSERT INTO STUDENT VALUES ("T16", "HUYNH HUU LAN", "429/92 HUYNH HUONG, CAN GIO", "C03");
INSERT INTO STUDENT VALUES ("T17", "NGO HOANG TUAN", "941/94 TRAN AN, QUAN 11", "C01");
INSERT INTO STUDENT VALUES ("T18", "HUYNH TRONG MAI", "127/33 HOANG DUNG, CU CHI", "C02");
INSERT INTO STUDENT VALUES ("T19", "NGUYEN MINH NAM", "342/3 HOANG BINH, BINH TAN", "C03");
INSERT INTO STUDENT VALUES ("T20", "LE KIM LINH", "429/84 LE LINH, QUAN 11", "C01"); 


SELECT * FROM STUDENT ;
 
-- insert data:  Distribute grades of subject to the students.
-- There are one to three subjects for each student.
-- Only one half students have grades.
INSERT INTO STUDENT_GRADES VALUES ("T01", "S01", 8);
INSERT INTO STUDENT_GRADES VALUES ("T01", "S02", 2);
INSERT INTO STUDENT_GRADES VALUES ("T01", "S05", 4);
INSERT INTO STUDENT_GRADES VALUES ("T01", "S04", 8);
INSERT INTO STUDENT_GRADES VALUES ("T01", "S03", 9);
INSERT INTO STUDENT_GRADES VALUES ("T02", "S02", 7);
INSERT INTO STUDENT_GRADES VALUES ("T03", "S01", 6);
INSERT INTO STUDENT_GRADES VALUES ("T03", "S04", 8);
INSERT INTO STUDENT_GRADES VALUES ("T03", "S05", 7);
INSERT INTO STUDENT_GRADES VALUES ("T04", "S02", 9);
INSERT INTO STUDENT_GRADES VALUES ("T04", "S05", 6);
INSERT INTO STUDENT_GRADES VALUES ("T05", "S03", 8);
INSERT INTO STUDENT_GRADES VALUES ("T06", "S01", 10);
INSERT INTO STUDENT_GRADES VALUES ("T06", "S04", 9);
INSERT INTO STUDENT_GRADES VALUES ("T06", "S02", 8);
INSERT INTO STUDENT_GRADES VALUES ("T07", "S02", 6);
INSERT INTO STUDENT_GRADES VALUES ("T07", "S03", 7);
INSERT INTO STUDENT_GRADES VALUES ("T08", "S05", 9);
INSERT INTO STUDENT_GRADES VALUES ("T09", "S01", 7);
INSERT INTO STUDENT_GRADES VALUES ("T09", "S02", 8);
INSERT INTO STUDENT_GRADES VALUES ("T09", "S04", 6);
INSERT INTO STUDENT_GRADES VALUES ("T10", "S03", 9);
INSERT INTO STUDENT_GRADES VALUES ("T10", "S05", 8);
INSERT INTO STUDENT_GRADES VALUES ("T10", "S02", 8);
INSERT INTO STUDENT_GRADES VALUES ("T10", "S01", 8);
INSERT INTO STUDENT_GRADES VALUES ("T10", "S04", 8);

SELECT * FROM STUDENT_GRADES;

-- Find the students that belong to class ID ”C02”
SELECT STUDENT_ID, STUDENT_NAME, CLASS_ID FROM STUDENT WHERE CLASS_ID = "C02";

-- Find the students that belong to class name = ”Computer Science”
SELECT S.STUDENT_ID, S.STUDENT_NAME, C.CLASS_NAME, C.CLASS_ID 
FROM STUDENT AS S 
JOIN CLASS AS C ON C.CLASS_ID = S.CLASS_ID 
WHERE C.CLASS_NAME = "COMPUTER SCIENCE" ; 

-- Find the students (All information) whose class year is ”2023”
SELECT S.STUDENT_ID, S.STUDENT_NAME, S.STUDENT_ADDRESS, C.CLASS_NAME, C.CLASS_ID 
FROM STUDENT AS S 
JOIN CLASS AS C ON C.CLASS_ID = S.CLASS_ID 
WHERE C.CLASS_YEAR = 2023 ; 

--  Find the Subject (name and units) of the Subject ID “S01”.
SELECT SUBJECT_NAME, UNITS FROM SUBJECT WHERE SUBJECT_ID = "S01"; 

-- What are the grades of student ”T02” for subject ”S02”?
SELECT STUDENT_ID, GRADES FROM STUDENT_GRADES WHERE SUBJECT_ID = "S02" AND STUDENT_ID = "T02";

-- Which subjects (*) did student ”T03” never take the exam for?
SELECT * FROM SUBJECT WHERE SUBJECT_ID NOT IN (SELECT SUBJECT_ID FROM STUDENT_GRADES WHERE STUDENT_ID = "T03");

-- How many students are in each class?
SELECT C.CLASS_ID, C.CLASS_NAME, COUNT(S.STUDENT_ID) 
FROM STUDENT AS S
JOIN CLASS AS C ON C.CLASS_ID = S.CLASS_ID 
GROUP BY C.CLASS_ID, C.CLASS_NAME ; 

-- Find the classes with the largest number of students.
SELECT C.CLASS_ID, C.CLASS_NAME, COUNT(*) 
FROM STUDENT AS S 
JOIN CLASS AS C ON C.CLASS_ID = S.CLASS_ID 
GROUP BY C.CLASS_ID, C.CLASS_NAME 
HAVING COUNT(*) = (
	SELECT MAX(DEM_1) FROM (
    SELECT C.CLASS_ID, COUNT(S.STUDENT_ID) AS DEM_1 
    FROM STUDENT AS S 
    JOIN CLASS AS C ON C.CLASS_ID = S.CLASS_ID
    GROUP BY C.CLASS_ID) AS SUB_1) ; 

-- Calculate the GPA (grade point average) of student ID ”T02”.
SELECT STUDENT_ID, AVG(GRADES) 
FROM STUDENT_GRADES 
WHERE STUDENT_ID LIKE "T02" 
GROUP BY STUDENT_ID ; 

-- Calculate the GPA for each student.
SELECT STUDENT_ID, AVG(GRADES) 
FROM STUDENT_GRADES 
GROUP BY STUDENT_ID ; 

-- Calculate the GPA of class ID ”C02”.
SELECT C.CLASS_ID, AVG(GPA) 
FROM (
	SELECT S.CLASS_ID, SG.STUDENT_ID, AVG(SG.GRADES) AS GPA
	FROM STUDENT_GRADES AS SG
	JOIN STUDENT AS S ON S.STUDENT_ID = SG.STUDENT_ID
	WHERE S.CLASS_ID = "C02"
	GROUP BY SG.STUDENT_ID
) AS SUB 
JOIN CLASS AS C ON C.CLASS_ID = SUB.CLASS_ID
GROUP BY C.CLASS_ID ; 

-- Calculate the GPA for each class.
SELECT C.CLASS_ID, AVG(GPA) 
FROM( 
SELECT S.CLASS_ID, SG.STUDENT_ID, AVG(SG.GRADES) AS GPA
FROM STUDENT_GRADES AS SG 
JOIN STUDENT AS S ON S.STUDENT_ID = SG.STUDENT_ID 
GROUP BY SG.STUDENT_ID) AS SUB 
JOIN CLASS AS C ON C.CLASS_ID = SUB.CLASS_ID 
GROUP BY C.CLASS_ID ; 

-- Find the classes (ID and Name) that have the largest average GPA.
SELECT C.CLASS_ID, C.CLASS_NAME, AVG(GPA) 
FROM (
	SELECT S.CLASS_ID, SG.STUDENT_ID, AVG(SG.GRADES) AS GPA
	FROM STUDENT AS S 
	JOIN STUDENT_GRADES AS SG ON S.STUDENT_ID = SG.STUDENT_ID
	GROUP BY SG.STUDENT_ID) AS STU 
JOIN CLASS AS C ON C.CLASS_ID = STU.CLASS_ID
GROUP BY C.CLASS_ID 
HAVING AVG(GPA) = (
	SELECT MAX(GPA_MAX) 
    FROM(
			SELECT C.CLASS_ID ,AVG(STU_1.ALL_CLASS_GPA) AS GPA_MAX 
            FROM (
					SELECT SG.STUDENT_ID, S.CLASS_ID, AVG(SG.GRADES) AS ALL_CLASS_GPA
					FROM STUDENT AS S 
					JOIN STUDENT_GRADES AS SG ON SG.STUDENT_ID = S.STUDENT_ID
					GROUP BY SG.STUDENT_ID) AS STU_1
JOIN CLASS AS C ON C.CLASS_ID = STU_1.CLASS_ID
GROUP BY C.CLASS_ID)AS ALL_GPA);

-- Find the students (ID and Name) who have the largest GPA.
SELECT S.STUDENT_ID, S.STUDENT_NAME, AVG(SG.GRADES)
FROM STUDENT AS S 
JOIN STUDENT_GRADES AS SG ON SG.STUDENT_ID = S.STUDENT_ID
GROUP BY S.STUDENT_ID 
HAVING AVG(SG.GRADES) = (
SELECT MAX(GPA) FROM 
(SELECT S.STUDENT_ID, AVG(SG.GRADES) AS GPA
FROM STUDENT AS S 
JOIN STUDENT_GRADES AS SG ON SG.STUDENT_ID = S.STUDENT_ID
GROUP BY S.STUDENT_ID) AS SA);


-- calculate gpa with weights for each student 
SELECT S.STUDENT_NAME, S.STUDENT_ID, SUM(SG.GRADES * SUB.UNITS) / SUM(SUB.UNITS) 
FROM STUDENT AS S 
JOIN STUDENT_GRADES AS SG ON S.STUDENT_ID = SG.STUDENT_ID
JOIN SUBJECT AS SUB ON SUB.SUBJECT_ID = SG.SUBJECT_ID 
GROUP BY S.STUDENT_ID ; 

-- SELECT STUDENTS HAVE RECEIVED A GRADES IN ALL SUBJECT
SELECT S.STUDENT_ID, S.STUDENT_NAME, COUNT(SG.SUBJECT_ID) 
FROM STUDENT AS S 
JOIN STUDENT_GRADES AS SG ON SG.STUDENT_ID = S.STUDENT_ID 
GROUP BY S.STUDENT_ID
HAVING COUNT(SG.SUBJECT_ID) = (
	SELECT MAX(SUB_COUNT) 
	FROM (
		SELECT S.STUDENT_ID, COUNT(SG.SUBJECT_ID) AS SUB_COUNT
		FROM STUDENT AS S
		JOIN STUDENT_GRADES AS SG ON SG.STUDENT_ID = S.STUDENT_ID
		GROUP BY S.STUDENT_ID)
		AS COUNT_ALL) ; 
-- Which students have received a grade in all subjects where each subject has 2 units
SELECT SG.STUDENT_ID, S.STUDENT_NAME, COUNT(SUB.SUBJECT_NAME)
FROM STUDENT_GRADES AS SG 
JOIN SUBJECT AS SUB ON SUB.SUBJECT_ID = SG.SUBJECT_ID
JOIN STUDENT AS S ON S.STUDENT_ID = SG.STUDENT_ID 
WHERE SUB.UNITS = 2 
GROUP BY SG.STUDENT_ID
HAVING COUNT(SUB.SUBJECT_NAME) = (SELECT COUNT(UNITS) FROM
SUBJECT 
WHERE UNITS = 2
);

-- Which students have passed (grade >= 5) in all subjects where each subject has 2 units? 

SELECT SG.STUDENT_ID, S.STUDENT_NAME, COUNT(SUB.SUBJECT_NAME)
FROM STUDENT_GRADES AS SG 
JOIN SUBJECT AS SUB ON SUB.SUBJECT_ID = SG.SUBJECT_ID
JOIN STUDENT AS S ON S.STUDENT_ID = SG.STUDENT_ID 
WHERE SUB.UNITS = 2 AND SG.GRADES >= 5
GROUP BY SG.STUDENT_ID
HAVING COUNT(SUB.SUBJECT_NAME) = (SELECT COUNT(UNITS) FROM
SUBJECT 
WHERE UNITS = 2
);


SELECT * FROM 
STUDENT_GRADES AS SG 
JOIN SUBJECT AS SUB ON SUB.SUBJECT_ID = SG.SUBJECT_ID
JOIN STUDENT AS S ON S.STUDENT_ID = SG.STUDENT_ID;